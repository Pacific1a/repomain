(function() {
  'use strict';

  // ============ FAKE PLAYERS GENERATOR ============
  const firstNames = ['Alex', 'John', 'Mike', 'Sarah', 'Emma', 'David', 'Chris', 'Anna', 'Tom', 'Lisa', 'Mark', 'Kate', 'Nick', 'Jane', 'Paul', 'Mary', 'Dan', 'Lucy', 'Sam', 'Nina'];
  const lastNames = ['Smith', 'Johnson', 'Brown', 'Davis', 'Wilson', 'Moore', 'Taylor', 'Anderson', 'Thomas', 'Jackson', 'White', 'Harris', 'Martin', 'Garcia', 'Martinez', 'Robinson', 'Clark', 'Rodriguez', 'Lewis'];

  function maskUsername(name) {
    if (name.length <= 2) return name;
    const first = name[0];
    const last = name[name.length - 1];
    const stars = '*'.repeat(Math.max(1, name.length - 2));
    return `${first}${stars}${last}`;
  }

  function generateFakePlayers(count = 30) {
    const players = [];
    const usedNames = new Set();

    for (let i = 0; i < count; i++) {
      let username;
      do {
        const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];
        const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];
        username = Math.random() > 0.5 ? firstName : `${firstName}${lastName[0]}`;
      } while (usedNames.has(username));

      usedNames.add(username);
      
      players.push({
        id: `fake_${i}`,
        username: maskUsername(username),
        photo_url: null,
        betAmount: Math.floor(Math.random() * 500) + 50,
        winAmount: 0
      });
    }

    return players;
  }

  // ============ TAB MANAGEMENT ============
  let currentTab = 'live-bets';
  const fakePlayers = generateFakePlayers(30);
  let activePlayers = []; // –ò–≥—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–µ–π—á–∞—Å "–∏–≥—Ä–∞—é—Ç"
  let simulationInterval = null;
  let playersOnlineCount = 0;

  const elements = {
    tabButtons: document.querySelectorAll('.tab-button'),
    tableHeaders: document.getElementById('table-headers'),
    roundResultBlock: document.getElementById('round-result-block'),
    playersOnlineBlock: document.getElementById('players-online-block'),
    playersCount: document.getElementById('players-count'),
    playersList: document.querySelector('.user-templates')
  };

  function switchTab(tabName) {
    currentTab = tabName;

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∫–ª–∞—Å—Å—ã –º–µ–∂–¥—É –∫–Ω–æ–ø–∫–∞–º–∏
    elements.tabButtons.forEach(btn => {
      if (btn.dataset.tab === tabName) {
        // –ê–∫—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞
        btn.classList.add('active');
        btn.classList.add('previos-2');
        btn.classList.remove('div-wrapper-2');
      } else {
        // –ù–µ–∞–∫—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞
        btn.classList.remove('active');
        btn.classList.remove('previos-2');
        btn.classList.add('div-wrapper-2');
      }
    });

    if (tabName === 'live-bets') {
      // –†–µ–∂–∏–º Live Bets - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º Players Online (—Å–∫–æ–ª—å–∫–æ –æ–Ω–ª–∞–π–Ω)
      elements.roundResultBlock.style.display = 'none';
      elements.playersOnlineBlock.style.display = 'block';
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–º—É–ª—è—Ü–∏—é –∏–≥—Ä–æ–∫–æ–≤
      startSimulation();
    } else if (tabName === 'previos') {
      // –†–µ–∂–∏–º Previos - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Å—Ç–∞–≤–∫–∏ –∏–≥—Ä–æ–∫–æ–≤
      elements.playersOnlineBlock.style.display = 'none';
      
      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏–º—É–ª—è—Ü–∏—é
      stopSimulation();
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑ wheel-game.js –µ—Å–ª–∏ –µ—Å—Ç—å
      if (window.updateDisplay) {
        window.updateDisplay();
      }
    }
  }

  // ============ SIMULATION ============
  function startSimulation() {
    stopSimulation(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å–∏–º—É–ª—è—Ü–∏—é
    
    activePlayers = [];
    
    // –°—Ä–∞–∑—É –¥–æ–±–∞–≤–ª—è–µ–º 3-4 –∏–≥—Ä–æ–∫–∞
    const initialCount = Math.floor(Math.random() * 2) + 3;
    for (let i = 0; i < initialCount; i++) {
      addRandomPlayer();
    }
    
    renderPreviosPlayers();
    updatePlayersCount();
    
    // –î–æ–±–∞–≤–ª—è–µ–º/—É–¥–∞–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤ –∫–∞–∂–¥—ã–µ 1-2 —Å–µ–∫—É–Ω–¥—ã
    simulationInterval = setInterval(() => {
      const action = Math.random();
      
      if (action > 0.4 && activePlayers.length < 5) {
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ (60% —à–∞–Ω—Å)
        addRandomPlayer();
      } else if (activePlayers.length > 0 && action < 0.3) {
        // –£–¥–∞–ª—è–µ–º –°–ê–ú–û–ì–û –°–¢–ê–†–û–ì–û –∏–≥—Ä–æ–∫–∞ (30% —à–∞–Ω—Å)
        removeOldestPlayer();
      }
      
      updatePlayersCount();
    }, Math.random() * 1000 + 1000); // 1-2 —Å–µ–∫—É–Ω–¥—ã
  }

  function stopSimulation() {
    if (simulationInterval) {
      clearInterval(simulationInterval);
      simulationInterval = null;
    }
  }

  function addRandomPlayer() {
    // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—â–µ –Ω–µ—Ç –≤ –∞–∫—Ç–∏–≤–Ω—ã—Ö
    const availablePlayers = fakePlayers.filter(p => !activePlayers.find(ap => ap.id === p.id));
    if (availablePlayers.length === 0) return;
    
    const player = { ...availablePlayers[Math.floor(Math.random() * availablePlayers.length)] };
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 40% –ø–æ–±–µ–¥–∞, 60% –ø—Ä–æ–∏–≥—Ä—ã—à
    const isWinner = Math.random() < 0.4;
    player.isWinner = isWinner;
    player.winAmount = isWinner ? Math.floor(player.betAmount * (Math.random() * 3 + 1.5)) : 0;
    player.addedTime = Date.now(); // –û—Ç–º–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    
    activePlayers.push(player);
    renderPreviosPlayers();
  }

  function removeOldestPlayer() {
    if (activePlayers.length === 0) return;
    
    // –£–¥–∞–ª—è–µ–º —Å–∞–º–æ–≥–æ —Å—Ç–∞—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞ (–ø–µ—Ä–≤—ã–π –≤ –º–∞—Å—Å–∏–≤–µ)
    activePlayers.shift();
    renderPreviosPlayers();
  }

  function renderPreviosPlayers() {
    if (!elements.playersList) return;
    
    elements.playersList.innerHTML = '';
    
    activePlayers.forEach(player => {
      const div = document.createElement('div');
      // –ü–æ–±–µ–¥–∏—Ç–µ–ª–∏ ‚Äî –∑–µ–ª–µ–Ω—ã–π/–æ–±—ã—á–Ω—ã–π –±–ª–æ–∫, –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏–µ ‚Äî –∫—Ä–∞—Å–Ω—ã–π —Ñ–æ–Ω
      div.className = player.isWinner ? 'win' : 'default lost';
      div.style.opacity = '0';
      div.style.transition = 'opacity 0.5s ease, background-color 0.3s ease';
      
      // –ö—Ä–∞—Å–Ω—ã–π —Ñ–æ–Ω –¥–ª—è –ø—Ä–æ–∏–≥—Ä–∞–≤—à–∏—Ö
      if (!player.isWinner) {
        div.style.backgroundColor = 'rgba(255, 0, 0, 0.1)';
        div.style.width = '100%';
      }
      
      div.innerHTML = `
        <div class="acc-inf">
          <div class="avatar-wrapper">
            <div class="avatar-2" style="${player.photo_url ? `background-image: url(${player.photo_url}); background-size: cover;` : ''}"></div>
          </div>
          <div class="n-k"><div class="n-k-2">${player.username}</div></div>
        </div>
        <div class="div-wrapper-2"><div class="text-wrapper-14">${player.betAmount}</div></div>
        <div class="element-wrapper"><div class="element-3">${player.isWinner && player.winAmount > 0 ? player.winAmount : '-'}</div></div>
      `;
      elements.playersList.appendChild(div);
      
      // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
      setTimeout(() => {
        div.style.opacity = '1';
      }, 50);
    });
  }

  function updatePlayersCount() {
    // –°—á–µ—Ç—á–∏–∫ = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ —Å–ø–∏—Å–∫–µ
    playersOnlineCount = activePlayers.length;
    
    if (elements.playersCount) {
      elements.playersCount.textContent = playersOnlineCount;
    }
  }

  // ============ EVENT LISTENERS ============
  elements.tabButtons.forEach(btn => {
    btn.addEventListener('click', () => {
      const tabName = btn.dataset.tab;
      switchTab(tabName);
    });
  });

  // ============ EXPORT FOR WHEEL-GAME ============
  window.TabsManager = {
    getCurrentTab: () => currentTab,
    switchToPrevios: () => switchTab('previos'),
    switchToLiveBets: () => switchTab('live-bets'),
    getFakePlayers: () => fakePlayers,
  };

  // ============ INIT ============
  function init() {
    switchTab('previos'); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–≤–∫–∏ –∏–≥—Ä–æ–∫–æ–≤
    updatePlayersCount();
    console.log('üìã Roll Tabs Manager –≥–æ—Ç–æ–≤!');
    console.log(`–°–æ–∑–¥–∞–Ω–æ ${fakePlayers.length} —Ñ–µ–π–∫–æ–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤`);
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }
})();
